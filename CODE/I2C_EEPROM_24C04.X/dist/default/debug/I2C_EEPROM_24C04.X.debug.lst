

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Sep 12 19:12:31 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	psect	text7,local,class=CODE,merge=1,delta=2
    14                           	psect	text8,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 22/03/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     008F                     	;# 
    97     0090                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0095                     	;# 
   105     0096                     	;# 
   106     0097                     	;# 
   107     0098                     	;# 
   108     0099                     	;# 
   109     009A                     	;# 
   110     009B                     	;# 
   111     009C                     	;# 
   112     009D                     	;# 
   113     009E                     	;# 
   114     009F                     	;# 
   115     0105                     	;# 
   116     0107                     	;# 
   117     0108                     	;# 
   118     0109                     	;# 
   119     010C                     	;# 
   120     010C                     	;# 
   121     010D                     	;# 
   122     010E                     	;# 
   123     010F                     	;# 
   124     0185                     	;# 
   125     0187                     	;# 
   126     0188                     	;# 
   127     0189                     	;# 
   128     018C                     	;# 
   129     018D                     	;# 
   130     0000                     	;# 
   131     0001                     	;# 
   132     0002                     	;# 
   133     0003                     	;# 
   134     0004                     	;# 
   135     0005                     	;# 
   136     0006                     	;# 
   137     0007                     	;# 
   138     0008                     	;# 
   139     0009                     	;# 
   140     000A                     	;# 
   141     000B                     	;# 
   142     000C                     	;# 
   143     000D                     	;# 
   144     000E                     	;# 
   145     000E                     	;# 
   146     000F                     	;# 
   147     0010                     	;# 
   148     0011                     	;# 
   149     0012                     	;# 
   150     0013                     	;# 
   151     0014                     	;# 
   152     0015                     	;# 
   153     0015                     	;# 
   154     0016                     	;# 
   155     0017                     	;# 
   156     0018                     	;# 
   157     0019                     	;# 
   158     001A                     	;# 
   159     001B                     	;# 
   160     001B                     	;# 
   161     001C                     	;# 
   162     001D                     	;# 
   163     001E                     	;# 
   164     001F                     	;# 
   165     0081                     	;# 
   166     0085                     	;# 
   167     0086                     	;# 
   168     0087                     	;# 
   169     0088                     	;# 
   170     0089                     	;# 
   171     008C                     	;# 
   172     008D                     	;# 
   173     008E                     	;# 
   174     008F                     	;# 
   175     0090                     	;# 
   176     0091                     	;# 
   177     0092                     	;# 
   178     0093                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0094                     	;# 
   182     0095                     	;# 
   183     0096                     	;# 
   184     0097                     	;# 
   185     0098                     	;# 
   186     0099                     	;# 
   187     009A                     	;# 
   188     009B                     	;# 
   189     009C                     	;# 
   190     009D                     	;# 
   191     009E                     	;# 
   192     009F                     	;# 
   193     0105                     	;# 
   194     0107                     	;# 
   195     0108                     	;# 
   196     0109                     	;# 
   197     010C                     	;# 
   198     010C                     	;# 
   199     010D                     	;# 
   200     010E                     	;# 
   201     010F                     	;# 
   202     0185                     	;# 
   203     0187                     	;# 
   204     0188                     	;# 
   205     0189                     	;# 
   206     018C                     	;# 
   207     018D                     	;# 
   208     0013                     _SSPBUF	set	19
   209     0014                     _SSPCON	set	20
   210     0009                     _PORTE	set	9
   211     0008                     _PORTD	set	8
   212     0007                     _PORTC	set	7
   213     0063                     _SSPIF	set	99
   214     0048                     _RE0	set	72
   215     0049                     _RE1	set	73
   216     0091                     _SSPCON2	set	145
   217     0094                     _SSPSTAT	set	148
   218     0087                     _TRISC	set	135
   219     0089                     _TRISE	set	137
   220     0088                     _TRISD	set	136
   221     048A                     _PEN	set	1162
   222     048C                     _ACKEN	set	1164
   223     048B                     _RCEN	set	1163
   224     048E                     _ACKSTAT	set	1166
   225     04A0                     _BF	set	1184
   226     0489                     _RSEN	set	1161
   227     0488                     _SEN	set	1160
   228     048D                     _ACKDT	set	1165
   229     0189                     _ANSELH	set	393
   230     0188                     _ANSEL	set	392
   231                           
   232                           	psect	cinit
   233     07FC                     start_initialization:	
   234                           ; #config settings
   235                           
   236     07FC                     __initialization:
   237     07FC                     end_of_initialization:	
   238                           ;End of C runtime variable initialization code
   239                           
   240     07FC                     __end_of__initialization:
   241     07FC  0183               	clrf	3
   242     07FD  120A  118A  2F72   	ljmp	_main	;jump to C main() function
   243                           
   244                           	psect	cstackCOMMON
   245     0070                     __pcstackCOMMON:
   246     0070                     ?_i2c_ins:
   247     0070                     ??_i2c_ins:	
   248                           ; 1 bytes @ 0x0
   249                           
   250     0070                     ?_i2c_st:	
   251                           ; 1 bytes @ 0x0
   252                           
   253     0070                     ??_i2c_st:	
   254                           ; 1 bytes @ 0x0
   255                           
   256     0070                     ?_i2c_write:	
   257                           ; 1 bytes @ 0x0
   258                           
   259     0070                     ??_i2c_write:	
   260                           ; 1 bytes @ 0x0
   261                           
   262     0070                     ?_i2c_stop:	
   263                           ; 1 bytes @ 0x0
   264                           
   265     0070                     ??_i2c_stop:	
   266                           ; 1 bytes @ 0x0
   267                           
   268     0070                     ?_i2c_restart:	
   269                           ; 1 bytes @ 0x0
   270                           
   271     0070                     ??_i2c_restart:	
   272                           ; 1 bytes @ 0x0
   273                           
   274     0070                     ?_i2c_read:	
   275                           ; 1 bytes @ 0x0
   276                           
   277     0070                     ??_i2c_read:	
   278                           ; 1 bytes @ 0x0
   279                           
   280     0070                     ?_puls:	
   281                           ; 1 bytes @ 0x0
   282                           
   283     0070                     ??_puls:	
   284                           ; 1 bytes @ 0x0
   285                           
   286     0070                     ?_main:	
   287                           ; 1 bytes @ 0x0
   288                           
   289     0070                     i2c_write@data:	
   290                           ; 2 bytes @ 0x0
   291                           
   292                           
   293                           ; 1 bytes @ 0x0
   294     0070                     	ds	1
   295     0071                     ?_cmd:
   296     0071                     cmd@data:	
   297                           ; 1 bytes @ 0x1
   298                           
   299                           
   300                           ; 1 bytes @ 0x1
   301     0071                     	ds	1
   302     0072                     ??_cmd:
   303     0072                     cmd@command:	
   304                           ; 1 bytes @ 0x2
   305                           
   306     0072                     i2c_read@data:	
   307                           ; 1 bytes @ 0x2
   308                           
   309                           
   310                           ; 2 bytes @ 0x2
   311     0072                     	ds	2
   312     0074                     ??_main:
   313                           
   314                           ; 1 bytes @ 0x4
   315     0074                     	ds	2
   316     0076                     main@data:
   317                           
   318                           ; 2 bytes @ 0x6
   319     0076                     	ds	2
   320                           
   321                           	psect	maintext
   322     0772                     __pmaintext:	
   323 ;;
   324 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   325 ;;
   326 ;; *************** function _main *****************
   327 ;; Defined at:
   328 ;;		line 38 in file "newmain.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;		None
   331 ;; Auto vars:     Size  Location     Type
   332 ;;  data            2    6[COMMON] int 
   333 ;; Return value:  Size  Location     Type
   334 ;;                  2   66[None  ] int 
   335 ;; Registers used:
   336 ;;		wreg, status,2, status,0, pclath, cstack
   337 ;; Tracked objects:
   338 ;;		On entry : B00/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   342 ;;      Params:         0       0       0       0       0
   343 ;;      Locals:         2       0       0       0       0
   344 ;;      Temps:          2       0       0       0       0
   345 ;;      Totals:         4       0       0       0       0
   346 ;;Total ram usage:        4 bytes
   347 ;; Hardware stack levels required when called: 2
   348 ;; This function calls:
   349 ;;		_cmd
   350 ;;		_i2c_ins
   351 ;;		_i2c_read
   352 ;;		_i2c_restart
   353 ;;		_i2c_st
   354 ;;		_i2c_stop
   355 ;;		_i2c_write
   356 ;; This function is called by:
   357 ;;		Startup code after reset
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361     0772                     _main:	
   362                           ;psect for function _main
   363                           
   364     0772                     l796:	
   365                           ;incstack = 0
   366                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   367                           
   368                           
   369                           ;newmain.c: 40:  int data;;newmain.c: 41:  PORTC=PORTD=PORTE=0X00;
   370     0772  1283               	bcf	3,5	;RP0=0, select bank0
   371     0773  1303               	bcf	3,6	;RP1=0, select bank0
   372     0774  0189               	clrf	9	;volatile
   373     0775  0188               	clrf	8	;volatile
   374     0776  0187               	clrf	7	;volatile
   375                           
   376                           ;newmain.c: 42:  TRISD=TRISE=0X00;
   377     0777  1683               	bsf	3,5	;RP0=1, select bank1
   378     0778  1303               	bcf	3,6	;RP1=0, select bank1
   379     0779  0189               	clrf	9	;volatile
   380     077A  0188               	clrf	8	;volatile
   381     077B                     l798:
   382                           
   383                           ;newmain.c: 43:  TRISC=0X18;
   384     077B  3018               	movlw	24
   385     077C  0087               	movwf	7	;volatile
   386     077D                     l800:
   387                           
   388                           ;newmain.c: 45:  ANSEL=ANSELH=0X00;
   389     077D  1683               	bsf	3,5	;RP0=1, select bank3
   390     077E  1703               	bsf	3,6	;RP1=1, select bank3
   391     077F  0189               	clrf	9	;volatile
   392     0780  0188               	clrf	8	;volatile
   393     0781                     l802:
   394                           
   395                           ;newmain.c: 47:  cmd(0,0x0e);
   396     0781  300E               	movlw	14
   397     0782  00F1               	movwf	cmd@data
   398     0783  3000               	movlw	0
   399     0784  120A  118A  274A  120A  118A  	fcall	_cmd
   400     0789                     l804:
   401                           
   402                           ;newmain.c: 48:  cmd(0,0x38);
   403     0789  3038               	movlw	56
   404     078A  00F1               	movwf	cmd@data
   405     078B  3000               	movlw	0
   406     078C  120A  118A  274A  120A  118A  	fcall	_cmd
   407     0791                     l806:
   408                           
   409                           ;newmain.c: 49:  cmd(0,0x80);
   410     0791  3080               	movlw	128
   411     0792  00F1               	movwf	cmd@data
   412     0793  3000               	movlw	0
   413     0794  120A  118A  274A  120A  118A  	fcall	_cmd
   414     0799                     l808:
   415                           
   416                           ;newmain.c: 51:  i2c_ins();
   417     0799  120A  118A  271D  120A  118A  	fcall	_i2c_ins
   418     079E                     l810:
   419                           
   420                           ;newmain.c: 53:  i2c_st();
   421     079E  120A  118A  270D  120A  118A  	fcall	_i2c_st
   422                           
   423                           ;newmain.c: 54:  i2c_write(0xa0);
   424     07A3  30A0               	movlw	160
   425     07A4  120A  118A  2729  120A  118A  	fcall	_i2c_write
   426                           
   427                           ;newmain.c: 55:  i2c_write(0x00);
   428     07A9  3000               	movlw	0
   429     07AA  120A  118A  2729  120A  118A  	fcall	_i2c_write
   430                           
   431                           ;newmain.c: 56:  i2c_write('1');
   432     07AF  3031               	movlw	49
   433     07B0  120A  118A  2729  120A  118A  	fcall	_i2c_write
   434     07B5                     l812:
   435                           
   436                           ;newmain.c: 57:  i2c_stop();
   437     07B5  120A  118A  2715  120A  118A  	fcall	_i2c_stop
   438                           
   439                           ;newmain.c: 58:  _delay((unsigned long)((1)*(4000000/4000.0)));
   440     07BA  30C7               	movlw	199
   441     07BB  00F4               	movwf	??_main
   442     07BC                     u147:
   443     07BC  2FBD               	nop2
   444     07BD  0BF4               	decfsz	??_main,f
   445     07BE  2FBC               	goto	u147
   446     07BF  2FC0               	nop2
   447     07C0  2FC1               	nop2
   448     07C1                     l814:
   449                           
   450                           ;newmain.c: 66:  {;newmain.c: 67:   i2c_st();
   451     07C1  120A  118A  270D  120A  118A  	fcall	_i2c_st
   452                           
   453                           ;newmain.c: 68:   i2c_write(0XA0);
   454     07C6  30A0               	movlw	160
   455     07C7  120A  118A  2729  120A  118A  	fcall	_i2c_write
   456                           
   457                           ;newmain.c: 69:   i2c_write(0x00);
   458     07CC  3000               	movlw	0
   459     07CD  120A  118A  2729  120A  118A  	fcall	_i2c_write
   460     07D2                     l816:
   461                           
   462                           ;newmain.c: 70:   i2c_restart();
   463     07D2  120A  118A  2705  120A  118A  	fcall	_i2c_restart
   464     07D7                     l818:
   465                           
   466                           ;newmain.c: 71:   i2c_write(0xa1);
   467     07D7  30A1               	movlw	161
   468     07D8  120A  118A  2729  120A  118A  	fcall	_i2c_write
   469     07DD                     l820:
   470                           
   471                           ;newmain.c: 72:   data=i2c_read();
   472     07DD  120A  118A  275D  120A  118A  	fcall	_i2c_read
   473     07E2  00F4               	movwf	??_main
   474     07E3  01F5               	clrf	??_main+1
   475     07E4  0874               	movf	??_main,w
   476     07E5  00F6               	movwf	main@data
   477     07E6  0875               	movf	??_main+1,w
   478     07E7  00F7               	movwf	main@data+1
   479     07E8                     l822:
   480                           
   481                           ;newmain.c: 73:   ACKDT=1;
   482     07E8  1683               	bsf	3,5	;RP0=1, select bank1
   483     07E9  1303               	bcf	3,6	;RP1=0, select bank1
   484     07EA  1691               	bsf	17,5	;volatile
   485     07EB                     l824:
   486                           
   487                           ;newmain.c: 74:   i2c_stop();
   488     07EB  120A  118A  2715  120A  118A  	fcall	_i2c_stop
   489     07F0                     l826:
   490                           
   491                           ;newmain.c: 75:   cmd(1,data);
   492     07F0  0876               	movf	main@data,w
   493     07F1  00F1               	movwf	cmd@data
   494     07F2  3001               	movlw	1
   495     07F3  120A  118A  274A  120A  118A  	fcall	_cmd
   496     07F8  2FC1               	goto	l814
   497     07F9  120A  118A  2800   	ljmp	start
   498     07FC                     __end_of_main:
   499                           
   500                           	psect	text1
   501     0729                     __ptext1:	
   502 ;; *************** function _i2c_write *****************
   503 ;; Defined at:
   504 ;;		line 117 in file "newmain.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;  data            1    wreg     unsigned char 
   507 ;; Auto vars:     Size  Location     Type
   508 ;;  data            1    0[COMMON] unsigned char 
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   518 ;;      Params:         0       0       0       0       0
   519 ;;      Locals:         1       0       0       0       0
   520 ;;      Temps:          0       0       0       0       0
   521 ;;      Totals:         1       0       0       0       0
   522 ;;Total ram usage:        1 bytes
   523 ;; Hardware stack levels used: 1
   524 ;; This function calls:
   525 ;;		Nothing
   526 ;; This function is called by:
   527 ;;		_main
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531     0729                     _i2c_write:	
   532                           ;psect for function _i2c_write
   533                           
   534                           
   535                           ;incstack = 0
   536                           ; Regs used in _i2c_write: [wreg]
   537                           ;i2c_write@data stored from wreg
   538     0729  00F0               	movwf	i2c_write@data
   539     072A                     l734:
   540                           
   541                           ;newmain.c: 117: void i2c_write(char data);newmain.c: 118: {;newmain.c: 119:  SSPBUF=dat
      +                          a;
   542     072A  0870               	movf	i2c_write@data,w
   543     072B  1283               	bcf	3,5	;RP0=0, select bank0
   544     072C  1303               	bcf	3,6	;RP1=0, select bank0
   545     072D  0093               	movwf	19	;volatile
   546     072E                     l106:	
   547                           ;newmain.c: 120:  while(BF==1);
   548                           
   549     072E  1683               	bsf	3,5	;RP0=1, select bank1
   550     072F  1303               	bcf	3,6	;RP1=0, select bank1
   551     0730  1814               	btfsc	20,0	;volatile
   552     0731  2F33               	goto	u41
   553     0732  2F34               	goto	u40
   554     0733                     u41:
   555     0733  2F2E               	goto	l106
   556     0734                     u40:
   557     0734                     l109:
   558     0734  1B11               	btfsc	17,6	;volatile
   559     0735  2F37               	goto	u51
   560     0736  2F38               	goto	u50
   561     0737                     u51:
   562     0737  2F34               	goto	l109
   563     0738                     u50:
   564     0738                     l112:
   565     0738  0008               	return
   566     0739                     __end_of_i2c_write:
   567                           
   568                           	psect	text2
   569     0715                     __ptext2:	
   570 ;; *************** function _i2c_stop *****************
   571 ;; Defined at:
   572 ;;		line 133 in file "newmain.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;		None
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		None
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   586 ;;      Params:         0       0       0       0       0
   587 ;;      Locals:         0       0       0       0       0
   588 ;;      Temps:          0       0       0       0       0
   589 ;;      Totals:         0       0       0       0       0
   590 ;;Total ram usage:        0 bytes
   591 ;; Hardware stack levels used: 1
   592 ;; This function calls:
   593 ;;		Nothing
   594 ;; This function is called by:
   595 ;;		_main
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599     0715                     _i2c_stop:	
   600                           ;psect for function _i2c_stop
   601                           
   602     0715                     l736:	
   603                           ;incstack = 0
   604                           ; Regs used in _i2c_stop: []
   605                           
   606                           
   607                           ;newmain.c: 135:  PEN=1;
   608     0715  1683               	bsf	3,5	;RP0=1, select bank1
   609     0716  1303               	bcf	3,6	;RP1=0, select bank1
   610     0717  1511               	bsf	17,2	;volatile
   611     0718                     l121:	
   612                           ;newmain.c: 136:  while(PEN==1);
   613                           
   614     0718  1911               	btfsc	17,2	;volatile
   615     0719  2F1B               	goto	u61
   616     071A  2F1C               	goto	u60
   617     071B                     u61:
   618     071B  2F18               	goto	l121
   619     071C                     u60:
   620     071C                     l124:
   621     071C  0008               	return
   622     071D                     __end_of_i2c_stop:
   623                           
   624                           	psect	text3
   625     070D                     __ptext3:	
   626 ;; *************** function _i2c_st *****************
   627 ;; Defined at:
   628 ;;		line 107 in file "newmain.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		None
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   642 ;;      Params:         0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0
   645 ;;      Totals:         0       0       0       0       0
   646 ;;Total ram usage:        0 bytes
   647 ;; Hardware stack levels used: 1
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_main
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655     070D                     _i2c_st:	
   656                           ;psect for function _i2c_st
   657                           
   658     070D                     l732:	
   659                           ;incstack = 0
   660                           ; Regs used in _i2c_st: []
   661                           
   662                           
   663                           ;newmain.c: 109:  SEN=1;
   664     070D  1683               	bsf	3,5	;RP0=1, select bank1
   665     070E  1303               	bcf	3,6	;RP1=0, select bank1
   666     070F  1411               	bsf	17,0	;volatile
   667     0710                     l94:	
   668                           ;newmain.c: 110:  while(SEN==1);
   669                           
   670     0710  1811               	btfsc	17,0	;volatile
   671     0711  2F13               	goto	u31
   672     0712  2F14               	goto	u30
   673     0713                     u31:
   674     0713  2F10               	goto	l94
   675     0714                     u30:
   676     0714                     l97:
   677     0714  0008               	return
   678     0715                     __end_of_i2c_st:
   679                           
   680                           	psect	text4
   681     0705                     __ptext4:	
   682 ;; *************** function _i2c_restart *****************
   683 ;; Defined at:
   684 ;;		line 112 in file "newmain.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;		None
   687 ;; Auto vars:     Size  Location     Type
   688 ;;		None
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		None
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   698 ;;      Params:         0       0       0       0       0
   699 ;;      Locals:         0       0       0       0       0
   700 ;;      Temps:          0       0       0       0       0
   701 ;;      Totals:         0       0       0       0       0
   702 ;;Total ram usage:        0 bytes
   703 ;; Hardware stack levels used: 1
   704 ;; This function calls:
   705 ;;		Nothing
   706 ;; This function is called by:
   707 ;;		_main
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711     0705                     _i2c_restart:	
   712                           ;psect for function _i2c_restart
   713                           
   714     0705                     l738:	
   715                           ;incstack = 0
   716                           ; Regs used in _i2c_restart: []
   717                           
   718                           
   719                           ;newmain.c: 114:  RSEN=1;
   720     0705  1683               	bsf	3,5	;RP0=1, select bank1
   721     0706  1303               	bcf	3,6	;RP1=0, select bank1
   722     0707  1491               	bsf	17,1	;volatile
   723     0708                     l100:	
   724                           ;newmain.c: 115:  while(RSEN==1);
   725                           
   726     0708  1891               	btfsc	17,1	;volatile
   727     0709  2F0B               	goto	u71
   728     070A  2F0C               	goto	u70
   729     070B                     u71:
   730     070B  2F08               	goto	l100
   731     070C                     u70:
   732     070C                     l103:
   733     070C  0008               	return
   734     070D                     __end_of_i2c_restart:
   735                           
   736                           	psect	text5
   737     075D                     __ptext5:	
   738 ;; *************** function _i2c_read *****************
   739 ;; Defined at:
   740 ;;		line 124 in file "newmain.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;		None
   743 ;; Auto vars:     Size  Location     Type
   744 ;;  data            2    2[COMMON] int 
   745 ;; Return value:  Size  Location     Type
   746 ;;                  1    wreg      unsigned char 
   747 ;; Registers used:
   748 ;;		wreg
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   754 ;;      Params:         0       0       0       0       0
   755 ;;      Locals:         2       0       0       0       0
   756 ;;      Temps:          2       0       0       0       0
   757 ;;      Totals:         4       0       0       0       0
   758 ;;Total ram usage:        4 bytes
   759 ;; Hardware stack levels used: 1
   760 ;; This function calls:
   761 ;;		Nothing
   762 ;; This function is called by:
   763 ;;		_main
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767     075D                     _i2c_read:	
   768                           ;psect for function _i2c_read
   769                           
   770     075D                     l740:	
   771                           ;incstack = 0
   772                           ; Regs used in _i2c_read: [wreg]
   773                           
   774                           
   775                           ;newmain.c: 126:  int data;;newmain.c: 127:  RCEN=1;
   776     075D  1683               	bsf	3,5	;RP0=1, select bank1
   777     075E  1303               	bcf	3,6	;RP1=0, select bank1
   778     075F  1591               	bsf	17,3	;volatile
   779     0760                     l115:	
   780                           ;newmain.c: 128:  while(BF==0);
   781                           
   782     0760  1C14               	btfss	20,0	;volatile
   783     0761  2F63               	goto	u81
   784     0762  2F64               	goto	u80
   785     0763                     u81:
   786     0763  2F60               	goto	l115
   787     0764                     u80:
   788     0764                     l742:
   789                           
   790                           ;newmain.c: 129:  data=SSPBUF;
   791     0764  1283               	bcf	3,5	;RP0=0, select bank0
   792     0765  1303               	bcf	3,6	;RP1=0, select bank0
   793     0766  0813               	movf	19,w	;volatile
   794     0767  00F0               	movwf	??_i2c_read
   795     0768  01F1               	clrf	??_i2c_read+1
   796     0769  0870               	movf	??_i2c_read,w
   797     076A  00F2               	movwf	i2c_read@data
   798     076B  0871               	movf	??_i2c_read+1,w
   799     076C  00F3               	movwf	i2c_read@data+1
   800     076D                     l744:
   801                           
   802                           ;newmain.c: 130:  ACKEN=1;
   803     076D  1683               	bsf	3,5	;RP0=1, select bank1
   804     076E  1303               	bcf	3,6	;RP1=0, select bank1
   805     076F  1611               	bsf	17,4	;volatile
   806                           
   807                           ;newmain.c: 131:  return data;
   808     0770  0872               	movf	i2c_read@data,w
   809     0771                     l118:
   810     0771  0008               	return
   811     0772                     __end_of_i2c_read:
   812                           
   813                           	psect	text6
   814     071D                     __ptext6:	
   815 ;; *************** function _i2c_ins *****************
   816 ;; Defined at:
   817 ;;		line 92 in file "newmain.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, status,2
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   831 ;;      Params:         0       0       0       0       0
   832 ;;      Locals:         0       0       0       0       0
   833 ;;      Temps:          0       0       0       0       0
   834 ;;      Totals:         0       0       0       0       0
   835 ;;Total ram usage:        0 bytes
   836 ;; Hardware stack levels used: 1
   837 ;; This function calls:
   838 ;;		Nothing
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844     071D                     _i2c_ins:	
   845                           ;psect for function _i2c_ins
   846                           
   847     071D                     l728:	
   848                           ;incstack = 0
   849                           ; Regs used in _i2c_ins: [wreg+status,2]
   850                           
   851                           
   852                           ;newmain.c: 94:  SSPSTAT=0x80;
   853     071D  3080               	movlw	128
   854     071E  1683               	bsf	3,5	;RP0=1, select bank1
   855     071F  1303               	bcf	3,6	;RP1=0, select bank1
   856     0720  0094               	movwf	20	;volatile
   857                           
   858                           ;newmain.c: 95:  SSPCON=0x28;
   859     0721  3028               	movlw	40
   860     0722  1283               	bcf	3,5	;RP0=0, select bank0
   861     0723  1303               	bcf	3,6	;RP1=0, select bank0
   862     0724  0094               	movwf	20	;volatile
   863     0725                     l730:
   864                           
   865                           ;newmain.c: 96:  SSPCON2=0x00;
   866     0725  1683               	bsf	3,5	;RP0=1, select bank1
   867     0726  1303               	bcf	3,6	;RP1=0, select bank1
   868     0727  0191               	clrf	17	;volatile
   869     0728                     l79:
   870     0728  0008               	return
   871     0729                     __end_of_i2c_ins:
   872                           
   873                           	psect	text7
   874     074A                     __ptext7:	
   875 ;; *************** function _cmd *****************
   876 ;; Defined at:
   877 ;;		line 86 in file "newmain.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;  command         1    wreg     unsigned char 
   880 ;;  data            1    1[COMMON] unsigned char 
   881 ;; Auto vars:     Size  Location     Type
   882 ;;  command         1    2[COMMON] unsigned char 
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, status,2, status,0, pclath, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   892 ;;      Params:         1       0       0       0       0
   893 ;;      Locals:         1       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0
   895 ;;      Totals:         2       0       0       0       0
   896 ;;Total ram usage:        2 bytes
   897 ;; Hardware stack levels used: 1
   898 ;; Hardware stack levels required when called: 1
   899 ;; This function calls:
   900 ;;		_puls
   901 ;; This function is called by:
   902 ;;		_main
   903 ;;		_st
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907     074A                     _cmd:	
   908                           ;psect for function _cmd
   909                           
   910                           
   911                           ;incstack = 0
   912                           ; Regs used in _cmd: [wreg+status,2+status,0+pclath+cstack]
   913                           ;cmd@command stored from wreg
   914     074A  00F2               	movwf	cmd@command
   915     074B                     l790:
   916                           
   917                           ;newmain.c: 86: void cmd(char command,char data);newmain.c: 87: {;newmain.c: 88:  RE0=co
      +                          mmand;
   918     074B  1872               	btfsc	cmd@command,0
   919     074C  2F4E               	goto	u111
   920     074D  2F52               	goto	u110
   921     074E                     u111:
   922     074E  1283               	bcf	3,5	;RP0=0, select bank0
   923     074F  1303               	bcf	3,6	;RP1=0, select bank0
   924     0750  1409               	bsf	9,0	;volatile
   925     0751  2F55               	goto	u124
   926     0752                     u110:
   927     0752  1283               	bcf	3,5	;RP0=0, select bank0
   928     0753  1303               	bcf	3,6	;RP1=0, select bank0
   929     0754  1009               	bcf	9,0	;volatile
   930     0755                     u124:
   931     0755                     l792:
   932                           
   933                           ;newmain.c: 89:  PORTD=data;
   934     0755  0871               	movf	cmd@data,w
   935     0756  0088               	movwf	8	;volatile
   936     0757                     l794:
   937                           
   938                           ;newmain.c: 90:  puls();
   939     0757  120A  118A  2739  120A  118A  	fcall	_puls
   940     075C                     l76:
   941     075C  0008               	return
   942     075D                     __end_of_cmd:
   943                           
   944                           	psect	text8
   945     0739                     __ptext8:	
   946 ;; *************** function _puls *****************
   947 ;; Defined at:
   948 ;;		line 79 in file "newmain.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   962 ;;      Params:         0       0       0       0       0
   963 ;;      Locals:         0       0       0       0       0
   964 ;;      Temps:          1       0       0       0       0
   965 ;;      Totals:         1       0       0       0       0
   966 ;;Total ram usage:        1 bytes
   967 ;; Hardware stack levels used: 1
   968 ;; This function calls:
   969 ;;		Nothing
   970 ;; This function is called by:
   971 ;;		_cmd
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975     0739                     _puls:	
   976                           ;psect for function _puls
   977                           
   978     0739                     l716:	
   979                           ;incstack = 0
   980                           ; Regs used in _puls: [wreg]
   981                           
   982                           
   983                           ;newmain.c: 81:  RE1=1;
   984     0739  1283               	bcf	3,5	;RP0=0, select bank0
   985     073A  1303               	bcf	3,6	;RP1=0, select bank0
   986     073B  1489               	bsf	9,1	;volatile
   987     073C                     l718:
   988                           
   989                           ;newmain.c: 82:  _delay((unsigned long)((50)*(4000000/4000000.0)));
   990     073C  3010               	movlw	16
   991     073D  00F0               	movwf	??_puls
   992     073E                     u157:
   993     073E  0BF0               	decfsz	??_puls,f
   994     073F  2F3E               	goto	u157
   995     0740  0000               	nop
   996     0741                     l720:
   997                           
   998                           ;newmain.c: 83:  RE1=0;
   999     0741  1283               	bcf	3,5	;RP0=0, select bank0
  1000     0742  1303               	bcf	3,6	;RP1=0, select bank0
  1001     0743  1089               	bcf	9,1	;volatile
  1002                           
  1003                           ;newmain.c: 84:  _delay((unsigned long)((50)*(4000000/4000000.0)));
  1004     0744  3010               	movlw	16
  1005     0745  00F0               	movwf	??_puls
  1006     0746                     u167:
  1007     0746  0BF0               	decfsz	??_puls,f
  1008     0747  2F46               	goto	u167
  1009     0748  0000               	nop
  1010     0749                     l73:
  1011     0749  0008               	return
  1012     074A                     __end_of_puls:
  1013     007E                     btemp	set	126	;btemp
  1014     007E                     wtemp0	set	126
  1015                           
  1016                           	psect	config
  1017                           
  1018                           ;Config register CONFIG1 @ 0x2007
  1019                           ;	Oscillator Selection bits
  1020                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1021                           ;	Watchdog Timer Enable bit
  1022                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1023                           ;	Power-up Timer Enable bit
  1024                           ;	PWRTE = ON, PWRT enabled
  1025                           ;	RE3/MCLR pin function select bit
  1026                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1027                           ;	Code Protection bit
  1028                           ;	CP = OFF, Program memory code protection is disabled
  1029                           ;	Data Code Protection bit
  1030                           ;	CPD = OFF, Data memory code protection is disabled
  1031                           ;	Brown Out Reset Selection bits
  1032                           ;	BOREN = OFF, BOR disabled
  1033                           ;	Internal External Switchover bit
  1034                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1035                           ;	Fail-Safe Clock Monitor Enabled bit
  1036                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1037                           ;	Low Voltage Programming Enable bit
  1038                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1039                           ;	In-Circuit Debugger Mode bit
  1040                           ;	DEBUG = 0x1, unpr  1041     2007                     	org	8199
  1042     2007  2CE4               	dw	11492
  1043                           
  1044                           ;Config register CONFIG2 @ 0x2008
  1045                           ;	Brown-out Reset Selection bit
  1046                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1047                           ;	Flash Program Memory Self Write Enable bits
  1048                           ;	WRT = OFF, Write protection off
  1049     2008                     	org	8200
  1050     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_i2c_read
    _cmd->_puls

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     477
                                              4 COMMON     4     4      0
                                _cmd
                            _i2c_ins
                           _i2c_read
                        _i2c_restart
                             _i2c_st
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _i2c_write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_st                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_read                                             4     4      0      15
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _i2c_ins                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cmd                                                  2     1      1     424
                                              1 COMMON     2     1      1
                               _puls
 ---------------------------------------------------------------------------------
 (2) _puls                                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
     _puls
   _i2c_ins
   _i2c_read
   _i2c_restart
   _i2c_st
   _i2c_stop
   _i2c_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Sep 12 19:12:31 2023

                     _BF 04A0                       l73 0749                       l76 075C  
                     l94 0710                       l79 0728                       l97 0714  
                     u30 0714                       u31 0713                       u40 0734  
                     u41 0733                       u50 0738                       u51 0737  
                     u60 071C                       u61 071B                       u70 070C  
                     u71 070B                       u80 0764                       u81 0763  
                    l100 0708                      l103 070C                      l112 0738  
                    l121 0718                      l106 072E                      l115 0760  
                    l124 071C                      l109 0734                      l118 0771  
                    l720 0741                      l800 077D                      l730 0725  
                    l810 079E                      l802 0781                      l716 0739  
                    l740 075D                      l732 070D                      l820 07DD  
                    l812 07B5                      l804 0789                      l718 073C  
                    l742 0764                      l734 072A                      l822 07E8  
                    l814 07C1                      l806 0791                      l728 071D  
                    l744 076D                      l736 0715                      l824 07EB  
                    l816 07D2                      l808 0799                      l738 0705  
                    l826 07F0                      l818 07D7                      l790 074B  
                    l792 0755                      l794 0757                      l796 0772  
                    l798 077B                      _RE0 0048                      _RE1 0049  
                    u110 0752                      u111 074E                      u124 0755  
                    u147 07BC                      u157 073E                      u167 0746  
                    _PEN 048A                      _SEN 0488                      _cmd 074A  
                   ?_cmd 0071                     _RCEN 048B                     _RSEN 0489  
                   _main 0772                     _puls 0739                     btemp 007E  
                   start 0000            ??_i2c_restart 0070          __end_of_i2c_ins 0729  
                  ??_cmd 0072                    ?_main 0070                    _ACKEN 048C  
                  _ACKDT 048D                    ?_puls 0070                    _ANSEL 0188  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _SSPIF 0063                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC             __end_of_puls 074A  
       __end_of_i2c_read 0772         __end_of_i2c_stop 071D      __end_of_i2c_restart 070D  
                 ??_main 0074                   ??_puls 0070                   _ANSELH 0189  
           i2c_read@data 0072                   _SSPCON 0014                   _SSPBUF 0013  
              ??_i2c_ins 0070                   _i2c_st 070D  __end_of__initialization 07FC  
         __pcstackCOMMON 0070              _i2c_restart 0705        __end_of_i2c_write 0739  
              ?_i2c_read 0070                ?_i2c_stop 0070                  ?_i2c_st 0070  
             __pmaintext 0772                  _ACKSTAT 048E                  _SSPCON2 0091  
                _SSPSTAT 0094               cmd@command 0072               ??_i2c_read 0070  
             ??_i2c_stop 0070                  _i2c_ins 071D                  __ptext1 0729  
                __ptext2 0715                  __ptext3 070D                  __ptext4 0705  
                __ptext5 075D                  __ptext6 071D                  __ptext7 074A  
                __ptext8 0739                  cmd@data 0071     end_of_initialization 07FC  
          i2c_write@data 0070           __end_of_i2c_st 0715             ?_i2c_restart 0070  
    start_initialization 07FC              __end_of_cmd 075D                _i2c_write 0729  
               ??_i2c_st 0070                ___latbits 0002               ?_i2c_write 0070  
               ?_i2c_ins 0070              ??_i2c_write 0070                 _i2c_read 075D  
               _i2c_stop 0715                 main@data 0076  
